// Generated by CoffeeScript 1.7.1
(function() {
  var Calculator, Parser;

  Calculator = (function() {
    function Calculator() {}

    Calculator.inputError = new TypeError("negative numbers are not allowed");

    Calculator.prototype.add = function(numbers_string) {
      var num, numbers, sum, _i, _len;
      if (numbers_string === "") {
        return 0;
      }
      numbers = new Parser(numbers_string).coerce(this.stringToNumber);
      sum = 0;
      for (_i = 0, _len = numbers.length; _i < _len; _i++) {
        num = numbers[_i];
        sum += num;
        if (num < 0) {
          this.rejectNegatives();
        }
      }
      return sum;
    };

    Calculator.prototype.stringToNumber = function(value) {
      return parseInt(value);
    };

    Calculator.prototype.rejectNegatives = function() {
      throw this.inputError;
    };

    return Calculator;

  })();

  Parser = (function() {
    Parser.prototype.delimiter = ",";

    function Parser(string) {
      this.string = string;
    }

    Parser.prototype.coerce = function(func) {
      this.parse();
      return this.toArray().map(func);
    };

    Parser.prototype.toArray = function() {
      return this.string.split(RegExp("\\n|" + this.delimiter));
    };

    Parser.prototype.parse = function() {
      var match, _ref;
      if (match = this.string.match(/\/\/(.+?)\n(.*)/)) {
        _ref = [match[2], match[1]], this.string = _ref[0], this.delimiter = _ref[1];
      }
      return this;
    };

    return Parser;

  })();

  module.exports = Calculator;

}).call(this);
